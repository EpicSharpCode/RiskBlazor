@inject IDataProvider dataService;

@if (holdings == null)
{
    <div class="loading">Loading Holdings table...</div>
} 
else 
{
<table>
    <thead>
        <tr>
            <th class="symbol">Symbol</th>
            <th>Price</th>
            <th>Chg %</th>
            <th>Shares Owned</th>
            <th>Avg. Price</th>
                <th>Market Value</th>
                <th>Profit / Loss</th>
                <th>Total P&L %</th
                <th>Today P&L</th>
                <th class="last">% Of Portfolio</th>
        </tr>
    </thead>
    <tbody>
        @if (holdings != null)
        {
            @foreach (var holding in holdings)
            {
                <tr>
                    <td class="symbol"><input type="checkbox" class="largerCheckbox"> <a href="/#">@holding.Symbol</a></td>
                    <td class="bold">@holding.Price</td>
                    <td class="@holding.Chg.GetClassAnalogName()">@holding.Chg</td>
                    <td><ButtonWithImage ButtonClass="btn button-empty" ImageURL="images/pencil.png" Text=" Add"/></td>
                    <td><ButtonWithImage ButtonClass="btn button-empty" ImageURL="images/pencil.png" Text=" Add"/></td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
            }
        }
    </tbody>
</table>
}

@code {
    private List<Holding> holdings;

    protected async override Task OnInitializedAsync()
    {
        if (holdings == null)
        {
            holdings = await dataService.GetHolding();
        }
    }
}
