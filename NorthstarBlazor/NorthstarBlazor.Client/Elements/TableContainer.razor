@inject IDataProvider dataService;

<div class="d-flex align-items-center bd-highlight mb-3">
    <div class="p-2 bd-highlight">
        <Dropdown DefaultValue="My Watchlist" SelectionList=@watchlistSelections Class="form-select padding" />
    </div>
    <div class="p-2 bd-highlight"><InputDropdown Collection="@searchSelections" /></div>
    <div class="ms-auto p-2 bd-highlight">
        <Dropdown DefaultValue="Options" SelectionList=@optionsSelections Class="form-select padding" />
    </div>
</div>

<div class="div-sticky">
    <button class="btn button-nav first" @onclick="ShowGeneralTable">General</button>
    <button class="btn button-nav" @onclick="ShowHoldingsTable">Holdings</button>
    <button class="btn button-nav">Dividends</button>
    <button class="btn button-nav">Perfomance</button>
    <button class="btn button-nav">Forecast</button>
    <button class="btn button-nav">Earnings</button>
    <button class="btn button-nav">Fundamentals</button>
    <button class="btn button-nav">Forecasts</button>
    <button class="btn button-nav">Earnings</button>
    <ButtonWithImage ButtonClass="btn button-nav" ImageURL="images/plus.png" Text=" Add View" />
    <ButtonWithImage ButtonClass="btn button-nav" ImageURL="images/pencil.png" Text=" Edit View" />
</div>

@switch (panelIndex)
{
    case 0:
        {
            <GeneralTable />
            break;
        }
    case 1:
        {
            <HoldingsTable />
            break;
        }
}

@code {
    public List<string> watchlistSelections = new List<string> { "Watchlist 1", "Watchlist 2", "Watchlist 3" };
    public List<ShareData> searchSelections;
    public List<string> optionsSelections = new List<string> { "Option 1", "Option 2", "Option 3" };

    public static int panelIndex { get; set; }
    const int tableCount = 2;

    public static int PanelIndex => panelIndex;

    public static void ShowPanel(int index)
    {
        if (index >= tableCount || index < 0) index = 0;
        panelIndex = index;
    }
    public void ShowNextTable()
    {
        ShowPanel(PanelIndex + 1);
    }
    public static void ShowGeneralTable() => ShowPanel(0);
    public static void ShowHoldingsTable() => ShowPanel(1);



    protected async override Task OnInitializedAsync()
    {
        searchSelections = await dataService.GetShareData();
    }
}